#!/bin/bash

# This is a bash script for interacting with the various files in './scripts/'.
# 
# Usage: ./bdocs [option]

set -e

# The project's root directory.
export PROJECT_ROOT
PROJECT_ROOT="$(dirname "$(realpath "$0")")"

# Displays usage for bdocs
display_help() {
    cat << EOF
bdocs is a CLI tool for executing Braze Docs scripts.

USAGE:
  ./bdocs [option]

OPTIONS:
  deploy       Create the deploy body text for weekly deployments
  release      Create the release body text for monthly releases
  tlinks       Transform reference links to inline links on 1 or more pages
  rlinks       Remove reference links that are not being used on 1 or more pages
  redirects    List the old URLs for all new redirects in this branch
  help         Display this help message and exit

EOF
}

# Check if no arguments were provided
if [[ $# -eq 0 ]]; then
    display_help
    exit 1
fi

# Argument parsing
case $1 in
    deploy)
        if [[ $# -eq 3 ]]; then
            "$PROJECT_ROOT/scripts/create_deploy_text.sh" "$2" "$3"
        else
            "$PROJECT_ROOT/scripts/create_deploy_text.sh"
        fi
        ;;
    release)
        "$PROJECT_ROOT/scripts/create_release_text.sh"
        ;;
    tlinks)
        if [[ -z "$2" ]]; then
            echo "Error: A file or directory path is required."
            exit 1
        fi
        python3 "$PROJECT_ROOT/scripts/transform_reference_links.py" "$2"
        echo "Success!"
        while true; do
            echo "Do you want to remove the unused reference links? [Y/n]."
            read -r opt
            case $opt in
                y*|Y*) 
                    ruby "$PROJECT_ROOT/scripts/remove_unused_reference_links.rb" "$2"
                    echo "Success!"
                    break 
                    ;;
                n*|N*)
                    echo "The unused reference links were left untouched."
                    break
                    ;;
                *) echo "Error: Invalid choice."
                    echo ""
                    ;;
            esac
        done    
        ;;
    rlinks)
        if [[ -z "$2" ]]; then
            echo "Error: The path to file or directory is required."
            exit 1
        fi
        ruby "$PROJECT_ROOT/scripts/remove_unused_reference_links.rb" "$2"
        ;;
    redirects)
        if [[ $# -eq 2 ]]; then
            "$PROJECT_ROOT/scripts/list_redirect_urls.sh" "$2"
        else
            "$PROJECT_ROOT/scripts/list_redirect_urls.sh"
        fi
        ;;
    help)
        display_help
        ;;
    *)
        echo "Error: Invalid choice: '$1'. To see all options, run: ./bdocs help"
        exit 1
        ;;
esac
