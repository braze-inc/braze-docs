name: Link PR to Matching Issue

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  link-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Link issue if PR title matches
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const matches = [...prTitle.matchAll(/\[BD-(\d+)\]/g)];
            if (matches.length === 0) return;

            for (const m of matches) {
              const tag = `[BD-${m[1]}]`;

              // Step 1 – find the matching open issue
              const { data: issues } = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open"
              });

              const matchedIssue = issues.find(issue => issue.title.includes(tag));
              if (!matchedIssue) continue;

              // Step 2 – check existing comments
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
              });

              const alreadyCommented = comments.some(comment =>
                comment.body.includes(`Fixes #${matchedIssue.number}`)
              );
              if (alreadyCommented) continue;

              // Step 3 – post the comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `Fixes #${matchedIssue.number}`
              });
            }
