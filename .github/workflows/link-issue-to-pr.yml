# Links PRs to matching issues if [BD-####] is in title, with label guard
name: Link PR to Matching Issue

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  link-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Link issue if PR title matches
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const prTitle = pr.title;

            // Extract [BD-####] from title
            const match = prTitle.match(/\[BD-(\d+)\]/);
            const bdNumber = match ? `BD-${match[1]}` : null;
            core.info(`issue in title: ${bdNumber || "None"}`);
            if (!bdNumber) return;

            // Check for guard label
            const labels = pr.labels.map(label => label.name);
            const tagExists = labels.includes("fixes an issue");
            core.info(`tag already exists? ${tagExists ? "yes" : "no"}`);
            if (tagExists) return;

            // Look for matching open issue with exact bracketed tag
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            });

            const matchedIssue = issues.find(issue =>
              issue.title.includes(`[${bdNumber}]`)
            );

            const issueFound = !!matchedIssue;
            core.info(`matching issue found? ${issueFound ? "yes" : "no"}`);
            if (!issueFound) return;

            // Post linking comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: `Fixes #${matchedIssue.number}`
            });
            core.info("comment posted? yes");

            // Add guard label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ["fixes an issue"]
            });
            core.info("tag added? yes");
