name: Link PR to Matching Issue

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  link-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Link issue if PR title matches
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const prTitle = pr.title;
            const match = prTitle.match(/\[BD-(\d+)\]/);
            if (!match) return;

            const tag = `BD-${match[1]}`;

            // Step 1: Find matching open issue
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            });

            const matchedIssue = issues.find(issue =>
              issue.title.includes(`[${tag}]`)
            );
            if (!matchedIssue) return;

            // Step 2: Check existing comments
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
            });

            const alreadyCommented = comments.some(comment =>
              comment.body.includes(`Fixes #${matchedIssue.number}`)
            );

            // Step 3: Comment if not already posted
            if (!alreadyCommented) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `Fixes #${matchedIssue.number}`
              });
            }
